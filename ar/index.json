[{"content":"","date":"30 يوليو 2023","permalink":"/ar/blog/","section":"Blogs","summary":"","title":"Blogs"},{"content":"","date":"30 يوليو 2023","permalink":"/ar/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"30 يوليو 2023","permalink":"/ar/tags/eloquent/","section":"Tags","summary":"","title":"eloquent"},{"content":"","date":"30 يوليو 2023","permalink":"/ar/tags/eloquent-relationships/","section":"Tags","summary":"","title":"eloquent relationships"},{"content":"","date":"30 يوليو 2023","permalink":"/ar/categories/laravel/","section":"Categories","summary":"","title":"Laravel"},{"content":" laravel10 one to one relationship مقدمة # غالبًا ما يحتاج المطور أن يتفاعل مع قواعد البيانات. وإذا كنت تستخدم Laravel فستتعرف على أهم مميزات إطار العمل هذا وهو ما يسمى Eloquent ، مخطط علاقات الكائنات (ORM) الذى يجعل هذه العملية بسيطة وطبيعية.\nيعد Laravel Eloquent أحد الميزات الرئيسية في إطار عمل Laravel. ويرجع ذلك إلى دعمه الرائع لتحديد وإنشاء وإدارة العلاقات بين جداول البيانات المختلفة. سأوضح لك في هذه السلسلة كيفية إنشاء واستخدام علاقات Eloquent ، بحيث يمكنك البدء دون أي معرفة سابقة بالعلاقات.\nمن الضروري كمحترف أن تتعرف وتفهم أنواع العلاقات الرئيسية الستة التي سنمر بها ونراجعها. ولكن قبل هذا يجب أن نعرف ما هى العلاقات من الأساس؟\nما هي العلاقات فى قاعدة البيانات؟ # عند العمل مع الجداول في قاعدة بيانات يوجد بينها علاقات ، يمكننا وصف العلاقات على أنها اتصالات بين الجداول. يساعدك هذا في تنظيم البيانات وهيكلتها دون عناء مما يتيح إمكانية قراءة فائقة ومعالجة للبيانات بشكل أسرع.\nما هي أنواع العلاقات الموجودة فى Laravel؟ # هناك ثلاثة أنواع رئيسية من العلاقات قى قاعدة البيانات تظهر عند الممارسة:\none-to-one: وهو سجل واحد مرتبط بسجل واحد فقط. ومثال على ذلك أن كل مستخدم يمتلك بروفايل واحد خاص به فى جدول أخر. one-to-many: ومثال على ذلك أن كل كاتب يمتلك أكثر من تدوينه فى جدول أخر. many-to-many: ومثال على ذلك أنه يمكن لأكثر من مستخدم الانضمام إلى أكثر من دورة واحدة. إلى جانب هذه العلاقات ، يقدم Laravel المزيد منها ، وهي:\nHas Many Through Polymorphic Relations Many-to-many Polymorphic ليصبح عدد العلاقات التى سنقوم بشرحها هم 6 أنواع. وسنقوم ببناء نظام إدارة محتوى بسيط لشرح جميع العلاقات.\nهل أحتاج إلى معرفة خاصة بـ Eloquent قبل قراءة هذا؟ في الأمثلة أدناه ، حاولت أن أشرح كل شيء بأكبر قدر ممكن من الوضوح ، دون استخدام الكثير من وظائف Eloquent الصعبة والتقنيات المعقدة. هذا يعني أن المعرفة السابقة ليست ضرورية تمامًا. ومع ذلك ، من الأفضل دائمًا تعلم الأساسيات أولاً ، ثم متابعة موضوعات أكثر تعقيدًا مثل العلاقات.\nOne-To-One Relationship # نظرًا لكونها أول علاقة أساسية وأبسطها يقدمها Laravel ، فإنهم يربطون جدولين بطريقة بحيث يرتبط صف واحد من الجدول الأول بصف واحد فقط من الجدول الآخر.\nلرؤية هذا كتطبيق عملى سنبدأ بإنشاء نظام إدارة المحتوى،\nلنفترض أن كل مستخدم يمكن أن يكون له ملف تعريف واحد. في بعض الحالات ، يمكنك تخزين جميع معلومات الملف الشخصي في جدول المستخدمين ، لكن هذا لن يكون مثاليًا. هنا ، في مثالنا ، أريد إنشاء جدول منفصل لهم. على سبيل المثال ، إذا أردنا لاحقًا نقل ملف تعريف إلى مستخدم مختلف ، فسيكون هذا مفيدًا.\nافتراضيا جدول المستخدمين موجود ولا يهم الأعمدة التى سيحتويها.\nلنقل أن لدينا جدول للمستخدمين يتكون من الأعمدة التالية: Schema::create(\u0026#39;users\u0026#39;, function (Blueprint $table) { $table-\u0026gt;id(); $table-\u0026gt;string(\u0026#39;username\u0026#39;); $table-\u0026gt;string(\u0026#39;email\u0026#39;)-\u0026gt;unique(); $table-\u0026gt;timestamps(); }); نقوم بتعديل ملف User.php. protected $fillable = [\u0026#39;username\u0026#39;]; لنقم بإنشاء Profile Model. php artisan make:model Profile -m فى علاقة One-to-One لدينا الحرية فى اختيار احد هاتين الطريقتين:\nإضافة user_id فى جدول profiles. إضافة profile_id فى جدول users. ولكن نتيجة طريقة تفكيرنا ، سيكون لكل مستخدم ملفه الشخصي الخاص به. وفي الغالب يتم دائمًا إضافة هذا العمود الذي يربط بين الجدولين إلى الجدول الثاني ، لذلك سنضيفه إلى جدول الملفات الشخصية على النحو التالي.\nSchema::create(\u0026#39;profiles\u0026#39;, function (Blueprint $table) { $table-\u0026gt;id(); $table-\u0026gt;string(\u0026#39;firstname\u0026#39;); $table-\u0026gt;string(\u0026#39;lastname\u0026#39;); $table-\u0026gt;string(\u0026#39;birthday\u0026#39;); $table-\u0026gt;foreignId(\u0026#39;user_id\u0026#39;)-\u0026gt;constrained(); $table-\u0026gt;timestamps(); }); نقوم بتعديل ملف Profile.php. protected $fillable = [ \u0026#39;user_id\u0026#39;, \u0026#39;firstname\u0026#39;, \u0026#39;lastname\u0026#39;, \u0026#39;birthday\u0026#39; ]; لنقم بتنفيذ هذا الأمر لتحديث قاعدة البيانات. php artisan migrate لنتوجه الى ملف User.php لنقم بتعيين العلاقة الجديدة. public function profile() { return $this-\u0026gt;hasOne(Profile::class); } لنتعرف كيف تعمل hasOne\n$this-\u0026gt;hasOne(Profile::class, \u0026#39;user_id\u0026#39; // foreignKey By Default Parent Model + Promary Key \u0026#39;id\u0026#39; // localKey =\u0026gt; Primary Key In Parent Table By Default is Id ); هناك طريقتين لإنشاء مستخدم وربطه بعلاقة مع ملف التعريف الخاص به: سنتوجه أولا لملف routes/web.php نضيف رابط جديد حتى نستطيع أن نختبر هذه الطرق.\nبدون إستخدام function profile. Route::get(\u0026#39;/one-to-one\u0026#39;, function () { $user = \\App\\Models\\User::create([\u0026#39;username\u0026#39; =\u0026gt; \u0026#39;John Doe\u0026#39;]); \\App\\Models\\Profile::create([ \u0026#39;user_id\u0026#39; =\u0026gt; $user-\u0026gt;id, \u0026#39;firstname\u0026#39; =\u0026gt; \u0026#39;John\u0026#39;, \u0026#39;lastname\u0026#39; =\u0026gt; \u0026#39;Doe\u0026#39;, \u0026#39;birthday\u0026#39; =\u0026gt; \u0026#39;08-11-1991\u0026#39; ]); return response()-\u0026gt;json([ \u0026#39;username\u0026#39; =\u0026gt; $user-\u0026gt;username, \u0026#39;firstname\u0026#39; =\u0026gt; $user-\u0026gt;profile-\u0026gt;firstname, \u0026#39;lastname\u0026#39; =\u0026gt; $user-\u0026gt;profile-\u0026gt;lastname, ]); }); سنقوم بفتح المتصفح ونذهب الى هذا الرابط http://127.0.0.1:8000/one-to-one لنجد أنه تم إنشاء المستخدم بنجاح.\n{ \u0026#34;username\u0026#34;: \u0026#34;John Doe\u0026#34;, \u0026#34;firstname\u0026#34;: \u0026#34;John\u0026#34;, \u0026#34;lastname\u0026#34;: \u0026#34;Doe\u0026#34; } بإستخدام function profile. Route::get(\u0026#39;/one-to-one\u0026#39;, function () { $user = \\App\\Models\\User::create([\u0026#39;username\u0026#39; =\u0026gt; \u0026#39;Tom Cruz\u0026#39;]); $user-\u0026gt;profile()-\u0026gt;create([ \u0026#39;firstname\u0026#39; =\u0026gt; \u0026#39;Tom\u0026#39;, \u0026#39;lastname\u0026#39; =\u0026gt; \u0026#39;Cruz\u0026#39;, \u0026#39;birthday\u0026#39; =\u0026gt; \u0026#39;01-02-2000\u0026#39; ]); return response()-\u0026gt;json([ \u0026#39;username\u0026#39; =\u0026gt; $user-\u0026gt;username, \u0026#39;firstname\u0026#39; =\u0026gt; $user-\u0026gt;profile-\u0026gt;firstname, \u0026#39;lastname\u0026#39; =\u0026gt; $user-\u0026gt;profile-\u0026gt;lastname, ]); }); سنقوم بفتح المتصفح ونذهب الى هذا الرابط مرة أخرى http://127.0.0.1:8000/one-to-one لنجد أنه تم إنشاء المستخدم بنجاح.\n{ \u0026#34;username\u0026#34;: \u0026#34;Tom Cruz\u0026#34;, \u0026#34;firstname\u0026#34;: \u0026#34;Tom\u0026#34;, \u0026#34;lastname\u0026#34;: \u0026#34;Cruz\u0026#34; } لنتوجه الى ملف Profile.php لنقم بتعيين العلاقة العكسية. public function user() { return $this-\u0026gt;belongsTo(User::class); } لنتعرف كيف تعمل belongsTo.\n$this-\u0026gt;belongsTo(User::class, \u0026#39;user_id\u0026#39; // foreignKey By Default Parent Model + Promary Key \u0026#39;id\u0026#39; // OwnerKey By Default Id ); لنقل أنك تريد تسمية العلاقة بإسم أخر مثل admin فيجب علينا إضافة ***foreignKey***s.\npublic function admin() { return $this-\u0026gt;belongsTo(User::class, \u0026#39;user_id\u0026#39; // You must add foreignKey ); } وإذا لم تقم بإضافة foreignKey عند تغيير أسم العلاقة سيظهر لك هذا الخطأ. Attempt to read property X on null هناك طريقة أخرى لإنشاء ملف تعريف وربطه بعلاقة عكسية مع المستخدم الذى يمتلكه من خلال function user. Route::get(\u0026#39;/one-to-one\u0026#39;, function () { $user = \\App\\Models\\User::create([\u0026#39;username\u0026#39; =\u0026gt; \u0026#39;Adam Smith\u0026#39;]); $profile = new \\App\\Models\\Profile([ \u0026#39;firstname\u0026#39; =\u0026gt; \u0026#39;Adam\u0026#39;, \u0026#39;lastname\u0026#39; =\u0026gt; \u0026#39;Smith\u0026#39;, \u0026#39;birthday\u0026#39; =\u0026gt; \u0026#39;01-01-1999\u0026#39; ]); $profile-\u0026gt;user()-\u0026gt;associate($user); $profile-\u0026gt;save(); return response()-\u0026gt;json([ \u0026#39;username\u0026#39; =\u0026gt; $profile-\u0026gt;user-\u0026gt;username, \u0026#39;firstname\u0026#39; =\u0026gt; $profile-\u0026gt;firstname, \u0026#39;lastname\u0026#39; =\u0026gt; $profile-\u0026gt;lastname, ]); }); سنقوم بفتح المتصفح ونذهب الى هذا الرابط مرة أخرى http://127.0.0.1:8000/one-to-one لنجد أنه تم إنشاء المستخدم بنجاح.\n{ \u0026#34;username\u0026#34;: \u0026#34;Adam Smith\u0026#34;, \u0026#34;firstname\u0026#34;: \u0026#34;Adam\u0026#34;, \u0026#34;lastname\u0026#34;: \u0026#34;Smith\u0026#34; } كيفية تحسين استعلام Eloquent في Laravel؟ # عند التعامل مع قاعدة بيانات كبيرة بداخلها الكثير من البيانات يأتى الوقت لتنظر للأمر بنظرة أخرى. فالأمر ليس مجرد جلب للبيانات ولكن كم من الوقت ستحتاج لجلب تلك البيانات. وكم عدد الإستعلامات التى ستقوم فى كل صفحة. ولإختبار هذا الأمر سنقوم بتنزيل مكتبة مشههور جدا اسمها Laravel Debugbar. ستساعدنا فى معرفة جميع الإستعلامات التى تتم فى كل صفحة.\nلنقم بتنفيذ هذا الأمر. composer require barryvdh/laravel-debugbar --dev وتأكد أن APP_DEBUG=true داخل ملف .env.\nثم سنقوم بإنشاء رابط جديد لعرض جميع المستخدمين الذين تم حفظهم فى قاعدة البينات أثناء قيامنا بالخطوات السابقة. Route::get(\u0026#39;/users\u0026#39;, function () { $users = \\App\\Models\\User::all(); return view(\u0026#39;users.oneToOne\u0026#39;, compact(\u0026#39;users\u0026#39;)); }); ونضيف أيضا بداخل فولدر views فولدر أخر أسمه users وبداخله نضيف ملف oneToOne.blade.php ونقوم بإضافة هذا الجدول البسيط لعرض المستخدمين. \u0026lt;table\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th style=\u0026#34;text-align: center\u0026#34;\u0026gt;Username\u0026lt;/th\u0026gt; \u0026lt;th style=\u0026#34;text-align: center\u0026#34;\u0026gt;Firstname\u0026lt;/th\u0026gt; \u0026lt;th style=\u0026#34;text-align: center\u0026#34;\u0026gt;Lastname\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; @foreach ($users as $user) \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;{{ $user-\u0026gt;username }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $user-\u0026gt;profile-\u0026gt;firstname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $user-\u0026gt;profile-\u0026gt;lastname }}\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; @endforeach \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; نتجه الأن للمتصفح ونذهب الى الرابط التالى http://127.0.0.1:8000/users لنرى ما هى النتائج التى ستظهر. Users View سنجد الأن أسفل الصفحة شريط Laravel Debugbar عند فتحه سنجد أن عدد الإستعلامات الموجوده فى هذه الصفحة \u0026ldquo;4\u0026rdquo; إستعلامات. وهم فقط 3 مستخدمين, تخيل معى لو داخل قاعدة البيانات الاف او ملايين المستخدمين سيكون وقت تحميل هذه الصفحة بظئ جدا. وهذا ما يسمى بمشكلة N+1 فى Laravel أو ما يطلق عليه Lazy Loading. laravel debugbar lazy loading ولحل هذه المشكلة نقوم بتعديل طريقة جلب المستخدمين بالشكل التالى. $users = \\App\\Models\\User::with(\u0026#39;profile\u0026#39;)-\u0026gt;get(); وكما ترى بإضافة كلمة with مع أسم العلاقة سيتم التغلب على هذه المشكلة فتم تقليص عدد الإستعلامات من 4 الى 2 وهذا الأمر سترى تأثيره بشكل واضح إذا كانت قاعدة البيانات متوسطة الحجم او كبيرة بالطبع وهذا ما يطلق عليه Eager Loading. laravel debugbar eager loading ويمكننا القيام بنفس تلك الخطوات السابقة إذا كنا سنستخدم العلاقة بشكل عكسى. مثال على هذا.\nثم سنقوم بإنشاء رابط جديد لعرض جميع ملفات التعريف الذين تم حفظهم فى قاعدة البينات أثناء قيامنا بالخطوات السابقة. Route::get(\u0026#39;/profiles\u0026#39;, function () { $profiles = \\App\\Models\\Profile::with(\u0026#39;user\u0026#39;)-\u0026gt;get(); return view(\u0026#39;profiles.oneToOne\u0026#39;, compact(\u0026#39;profiles\u0026#39;)); }); ونضيف أيضا بداخل فولدر views فولدر أخر أسمه profiles وبداخله نضيف ملف oneToOne.blade.php ونقوم بإضافة هذا الجدول البسيط لعرض المستخدمين. \u0026lt;table\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th style=\u0026#34;text-align: center\u0026#34;\u0026gt;Username\u0026lt;/th\u0026gt; \u0026lt;th style=\u0026#34;text-align: center\u0026#34;\u0026gt;Firstname\u0026lt;/th\u0026gt; \u0026lt;th style=\u0026#34;text-align: center\u0026#34;\u0026gt;Lastname\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; @foreach ($profiles as $profile) \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;{{ $profile-\u0026gt;user-\u0026gt;username }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $profile-\u0026gt;firstname }}\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;{{ $profile-\u0026gt;lastname }}\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; @endforeach \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; نتجه الأن للمتصفح ونذهب الى الرابط التالى http://127.0.0.1:8000/profiles لنرى ما هى النتائج التى ستظهر. ستجد أن النتائج التى سوف تظهر تشبه نفس النتائج السابقة.\nالخاتمة # هذه المقالة هى بداية لسلسلة كاملة عن Laravel Eloquent Relationships - العلاقات داخل Laravel. وقد تناولنا فيها علاقة One TO One بطريقة بسيطة ولم نبخل عليكم بأى معلومة, وإن شاء الله فى المقال القادم سنتعرف على علاقة One To Many. وفى الختام نصلى على رسول الله سيدنا محمد وعلى اُله وصحبه أجمعين.\n","date":"30 يوليو 2023","permalink":"/ar/blog/laravel10-one-to-one-relationship-in-arabic/","section":"Blogs","summary":"laravel10 one to one relationship مقدمة # غالبًا ما يحتاج المطور أن يتفاعل مع قواعد البيانات. وإذا كنت تستخدم Laravel فستتعرف على أهم مميزات إطار العمل هذا وهو ما يسمى Eloquent ، مخطط علاقات الكائنات (ORM) الذى يجعل هذه العملية بسيطة وطبيعية.","title":"Laravel 10 | One-To-One Relationship In Arabic"},{"content":"","date":"30 يوليو 2023","permalink":"/ar/series/laravel-10-eloquent-relations/","section":"Series","summary":"","title":"Laravel 10 Eloquent Relations"},{"content":"","date":"30 يوليو 2023","permalink":"/ar/categories/laravel-relationships/","section":"Categories","summary":"","title":"Laravel Relationships"},{"content":"","date":"30 يوليو 2023","permalink":"/ar/","section":"Laravel SPA","summary":"","title":"Laravel SPA"},{"content":"","date":"30 يوليو 2023","permalink":"/ar/tags/laravel10/","section":"Tags","summary":"","title":"laravel10"},{"content":"","date":"30 يوليو 2023","permalink":"/ar/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"30 يوليو 2023","permalink":"/ar/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"8 مايو 2023","permalink":"/ar/tags/full-stack/","section":"Tags","summary":"","title":"full stack"},{"content":"","date":"8 مايو 2023","permalink":"/ar/tags/spa/","section":"Tags","summary":"","title":"spa"},{"content":"","date":"8 مايو 2023","permalink":"/ar/tags/vue3/","section":"Tags","summary":"","title":"vue3"},{"content":"","date":"8 مايو 2023","permalink":"/ar/categories/vuejs/","section":"Categories","summary":"","title":"Vuejs"},{"content":" عرض المشروع # Laravel 10 Vue 3 ما هو إطار عمل Laravel # Laravel هو إطار عمل لتطبيق ويب ذو بناء مرتب وأنيق. يوفر إطار عمل الويب هيكلًا ونقطة بداية لإنشاء تطبيقك ، مما يسمح لك بالتركيز على إنشاء شيء مذهل بينما تهتم بالتفاصيل. ما هى Vue js! # Vue هو إطار عمل JavaScript لبناء واجهات المستخدم. يعتمد على HTML و CSS و JavaScript. يساعدك على تطوير واجهات المستخدم بكفاءة ، سواء كانت بسيطة أو معقدة. ما هى Vite js! # Vite هي أداة بناء تهدف إلى توفير تجربة تطوير أسرع وأكثر رشاقة لمشاريع الويب الحديثة. وهذه المشاريع تتكون من جزئين رئيسيين:\nخادم مطور يوفر تحسينات غنية بالميزات على وحدات ES الأصلية ، على سبيل المثال استبدال الوحدة النمطية السريعة للغاية (HMR).\nأمر بناء يجمع التعليمات البرمجية الخاصة بك مع Rollup ، مهيأ مسبقًا لإنتاج أصول ثابتة محسّنة للغاية للإنتاج.\nونستنتج من السابق أن أهم شئ بيميز vite هى السرعة فى بداية السيرفر وأيضا عمل bundle لملفات المشروع عند الانتهاء من المشروع. الخطوة الأولى: إنشاء مشروع Laravel جديد # composer create-project laravel/laravel laravel10-vue3 الخطوة الثانية: كيفية تحميل Vue 3 فى مشروع Laravel 10 # cd laravel10-vue3 npm install npm install vue@next vue-loader@next الخطوة الثالثة: تحميل Plugin Vue من Vite # npm i @vitejs/plugin-vue الخطوة الرابعة: قم بتعديل ملف vite.config.js # // vite.config.js import { defineConfig } from \u0026#39;vite\u0026#39;; import laravel from \u0026#39;laravel-vite-plugin\u0026#39;; import vue from \u0026#39;@vitejs/plugin-vue\u0026#39; export default defineConfig({ plugins: [ vue(), laravel({ input: [\u0026#39;resources/css/app.css\u0026#39;, \u0026#39;resources/js/app.js\u0026#39;], refresh: true, }), ], }); الخطوة الخامسة: قم بتعديل ملف app.js داخل مجلد resources/js # import {createApp} from \u0026#39;vue\u0026#39; import App from \u0026#39;./App.vue\u0026#39; createApp(App).mount(\u0026#34;#app\u0026#34;) الخطوة السادسة: قم بإنشاء ملف app.blade.php داخل مجلد resources/views # تأكد من إضافة ملف css و javascript كما هو موضح وأيضا div ب id=app \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;{{ str_replace(\u0026#39;_\u0026#39;, \u0026#39;-\u0026#39;, app()-\u0026gt;getLocale()) }}\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34;\u0026gt; \u0026lt;title\u0026gt;ًApplication\u0026lt;/title\u0026gt; @vite(\u0026#39;resources/css/app.css\u0026#39;) \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; @vite(\u0026#39;resources/js/app.js\u0026#39;) \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; الخطوة السابعة: قم بإنشاء ملف App.vue داخل مجلد resources/js # \u0026lt;template\u0026gt; \u0026lt;h1\u0026gt; How To Install Vue 3 in Laravel 10 : ZWebCourses :) \u0026lt;/h1\u0026gt; \u0026lt;/template\u0026gt; الخطوة الثامنة: قم بتعديل ملف web.php داخل مجلد routes # \u0026lt;?php use Illuminate\\Support\\Facades\\Route; Route::get(\u0026#39;/\u0026#39;, function () { return view(\u0026#39;app\u0026#39;); }) -\u0026gt;name(\u0026#39;application\u0026#39;); الخطوة التاسعة: قم بتشغيل السيرفر المحلى # php artisan serve الخطوة العاشرة: فم بتشغيل السيرفر المحلى Node # npm run dev قم بالذهاب الى http://127.0.0.1:8000/ ستجد ما يلى Laravel 10 Vue 3 ستجد repo الخاصة بهذا المشروع على github فى هذا الرابط https://github.com/zwebcourses/laravel10-vue3 ","date":"8 مايو 2023","permalink":"/ar/blog/how-to-install-vue3-in-laravel10-with-vite-in-arabic/","section":"Blogs","summary":"عرض المشروع # Laravel 10 Vue 3 ما هو إطار عمل Laravel # Laravel هو إطار عمل لتطبيق ويب ذو بناء مرتب وأنيق. يوفر إطار عمل الويب هيكلًا ونقطة بداية لإنشاء تطبيقك ، مما يسمح لك بالتركيز على إنشاء شيء مذهل بينما تهتم بالتفاصيل.","title":"كيفية تحميل Vue 3 داخل مشروع Laravel 10 بإستخدام Vite"},{"content":"","date":"1 يناير 0001","permalink":"/ar/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"شكرا لك على قراءة مدونتي!\nقم بالتسجيل في نشرتنا عبر البريد الإلكتروني أو يمكنك إستخدام RSS feed لتلقي تنبيهات حول منشورات المدونة الجديدة.\n","date":"1 يناير 0001","permalink":"/ar/subscribe/","section":"Laravel SPA","summary":"شكرا لك على قراءة مدونتي!\nقم بالتسجيل في نشرتنا عبر البريد الإلكتروني أو يمكنك إستخدام RSS feed لتلقي تنبيهات حول منشورات المدونة الجديدة.","title":"تابعنا"},{"content":" كن على تواصل ","date":"1 يناير 0001","permalink":"/ar/contact-us/","section":"Laravel SPA","summary":" كن على تواصل ","title":"تواصل معنا"},{"content":" سياسة خصوصية المدونة # قمنا بتصميم هذه المدونة للاسراء المحتوي العربي من خلال توفير موضوعات ومقالات هامة ومفيدة في تحضض المدونة وقد تم إعداد سياسة الخصوصية لمساعدتكم وحماية بياناتكم عند زيارتكم لمدونتنا علي شبكة الأنترنت وسيتم فقط استخدام البيانات التي تقدموها لنا بمعرفتكم ومحض إرادتكم ولا نجمع أي بيانات أخري عند تصفحكم مدونتنا الإلكترونية .\nعنوان بروتوكول شبكة الإنترنت (IP) # في أي وقت تزور فيه أي موقع انترنت بما فيها هذا الموقع , سيقوم السيرفر المضيف بتسجيل عنوان بروتوكول شبكة الإنترنت (IP) الخاص بك , تاريخ ووقت الزيارة ونوع متصفح الإنترنت الذي تستخدمه والعنوان URL الخاص بأي موقع من مواقع الإنترنت التي تقوم بإحالتك إلى الى هذا الموقع على الشبكة.\nالروابط بالمواقع الأخرى على شبكة الإنترنت # قد يشتمل موقعنا على روابط بالمواقع الأخرى على شبكة الإنترنت. او إعلانات من مواقع أخرى مثل Google AdSense ولا نعتبر مسئولين عن أساليب تجميع البيانات من قبل تلك المواقع, يمكنك الاطلاع على سياسات السرية والمحتويات الخاصة بتلك المواقع التي يتم الدخول إليها من خلال أي رابط ضمن هذا الموقع.\nنحن قد نستعين بشركات إعلان لأطراف ثالثة لعرض الإعلانات عندما تزور موقعنا على الويب. يحق لهذه الشركات أن تستخدم معلومات حول زياراتك لهذا الموقع ولمواقع الويب الأخرى (باستثناء الاسم أو العنوان أو عنوان البريد الإلكتروني أو رقم الهاتف)، وذلك من أجل تقديم إعلانات حول البضائع والخدمات التي تهمك. إذا كنت ترغب في مزيد من المعلومات حول هذا الأمر وكذلك إذا كنت تريد معرفة الاختيارات المتاحة لك لمنع استخدام هذه المعلومات من قِبل هذه الشركات ، فالرجاء النقر هنا.\nإفشاء المعلومات # سنحافظ في كافة الأوقات على خصوصية وسرية كافة البيانات الشخصية التي نتحصل عليها. ولن يتم إفشاء هذه المعلومات إلا إذا كان ذلك مطلوباً بموجب أي قانون أو عندما نعتقد بحسن نية أن مثل هذا الإجراء سيكون مطلوباً أو مرغوباً فيه للتمشي مع القانون , أو للدفاع عن أو حماية حقوق الملكية الخاصة بهذا الموقع أو الجهات المستفيدة منه.\nالبيانات اللازمة لتنفيذ المعاملات المطلوبة من قبلك # عندما نحتاج إلى أية بيانات خاصة بك , فإننا سنطلب منك تقديمها بمحض إرادتك. حيث ستساعدنا هذه المعلومات في الاتصال بك وتنفيذ طلباتك حيثما كان ذلك ممكنناً. لن يتم اطلاقاً بيع البيانات المقدمة من قبلك إلى أي طرف ثالث بغرض تسويقها لمصلحته الخاصة دون الحصول على موافقتك المسبقة والمكتوبة ما لم يتم ذلك على أساس أنها ضمن بيانات جماعية تستخدم للأغراض الإحصائية والأبحاث دون اشتمالها على أية بيانات من الممكن استخدامها للتعريف بك.\nعند الاتصال بنا # سيتم التعامل مع كافة البيانات المقدمة من قبلك على أساس أنها سرية . تتطلب النماذج التي يتم تقديمها مباشرة على الشبكة تقديم البيانات التي ستساعدنا في تحسين موقعنا. سيتم استخدام البيانات التي يتم تقديمها من قبلك في الرد على كافة استفساراتك , ملاحظاتك , أو طلباتك من قبل هذا الموقع أو أيا من المواقع التابعة له.\nإفشاء المعلومات لأي طرف ثالث # لن نقوم ببيع , المتاجرة , تأجير , أو إفشاء أية معلومات لمصلحة أي طرف ثالث خارج هذا الموقع, أو المواقع التابعة له. وسيتم الكشف عن المعلومات فقط في حالة صدور أمر بذلك من قبل أي سلطة قضائية أو تنظيمية.\nالاتصال بنا # يمكنكم الاتصال بنا عند الحاجة من خلال الضغط على رابط اتصل بنا المتوفر في موقعنا أو مراسلتنا عبر صفحة الفيس بوك.\n","date":"1 يناير 0001","permalink":"/ar/privacy-policy/","section":"Laravel SPA","summary":"سياسة خصوصية المدونة # قمنا بتصميم هذه المدونة للاسراء المحتوي العربي من خلال توفير موضوعات ومقالات هامة ومفيدة في تحضض المدونة وقد تم إعداد سياسة الخصوصية لمساعدتكم وحماية بياناتكم عند زيارتكم لمدونتنا علي شبكة الأنترنت وسيتم فقط استخدام البيانات التي تقدموها لنا بمعرفتكم ومحض إرادتكم ولا نجمع أي بيانات أخري عند تصفحكم مدونتنا الإلكترونية .","title":"سياسة الخصوصية"},{"content":"شروط الاستخدام\nباستخدامك لهذه المدونة، بأي وسيلة كانت، فأنت تقر بأنك قد قرأت هذه الاتفاقية وفهمتها و بأنك موافق علي ما ورد فيها.\n1- توفر المدونة إمكانية التعليق علي المحتوي المنشور فيها، و ويحق لك كما لكل المستخدمين المشاركة في التعليقات، علي الا تقوم بنشر أي محتوي يمكن ان يكون ضارا، غير مشروع، تشهيري، مخالف، مسيء، محرض، مضايق او ما شابه ذلك.\n2- أنت وحدك المسؤول عن التعليقات التي تشارك بها ولا تتحمل المدونة أي مسؤولية.\n3 - حقوق الملكية الفكرية للتعليقات تبقي مسجلة لك، لكن يحق لصاحب المدونة إعادة استخدام التعليقات في أي نشاط متعلق بالمدونة دون الحاجة الي طلب اذن مسبق من صاحب التعليق، بشرط ان يقوم بذكر اسم صاحب التعليق ولا يعدل علي التعليق يشكل يؤدي الي التحريف في معناه.\n4- للتعليق في المدونة يفضل ذكر اسمك الشخصي، يمكنك استخدام اسم مستعار، لكن لا يسمح ابداً بانتحال اسم أي شخص أو هيئة.\n5- يفضل ذكر بريدك الاليكتروني الحقيقي عند الاتصال بنا او التواصل معنا، المدونة تلتزم بعدم استخدام هذا البريد في أي نشاط سوي المراسلات الشخصية، وتلتزم بألا تسلم بريدك الي أي طرف ثالت دون اذن مسبق منك.\n6- يجب عليك ألا تعدل أو تغير في مواضيع المدونة أو استخدامها بطرق غير مشروعة بأي طرق يمكن ان تضر أو تعطل المدونة.\n7- لا يحق لك نقل محتوى المدنة من مواضيع و شروحات و فيديوهات إلى موقعك او مدونتك بدون ذكر المصدر و هي \u0026quot; مدونة Laravel SPA \u0026quot; مع رابط مباشر يؤدي إلى الموضوع الأصلي الذي تم نقله.\n8- قد تتغير هذه الاتفاقية من فترة لأخري بما نراه مناسباً لهدف المدونة، لذا أرجو منك مراجعتها والتقيد بما فيها.\n","date":"1 يناير 0001","permalink":"/ar/terms-and-conditions/","section":"Laravel SPA","summary":"شروط الاستخدام\nباستخدامك لهذه المدونة، بأي وسيلة كانت، فأنت تقر بأنك قد قرأت هذه الاتفاقية وفهمتها و بأنك موافق علي ما ورد فيها.\n1- توفر المدونة إمكانية التعليق علي المحتوي المنشور فيها، و ويحق لك كما لكل المستخدمين المشاركة في التعليقات، علي الا تقوم بنشر أي محتوي يمكن ان يكون ضارا، غير مشروع، تشهيري، مخالف، مسيء، محرض، مضايق او ما شابه ذلك.","title":"شروط الإستخدام"},{"content":"مرحبا انا محمود عادل.\nمرحبًا بك في Laravel SPA: موطن البرامج التعليمية ومقاطع الفيديو والنصائح حول إطار العمل المفضل لدينا Laravel. بدأت في عام 2023 كمدونة شخصية صغيرة ، وسوف تنمو لتصبح مركزًا للمعلومات المفيدة لجميع المستويات ان شاء الله.\nأدير أيضًا قناة على YouTube تحمل نفس اسم Laravel SPA.\nيمكنك متابعة أحدث دروس Laravel التعليمية على Twitter أو عن طريق الاشتراك في النشرة الإخبارية الأسبوعية.\nإذا كنت ترغب في التواصل ، أرسل بريدًا إلكترونيًا إلى dev.mahmoud.adel@gmail.com\n","date":"1 يناير 0001","permalink":"/ar/about-us/","section":"Laravel SPA","summary":"مرحبا انا محمود عادل.\nمرحبًا بك في Laravel SPA: موطن البرامج التعليمية ومقاطع الفيديو والنصائح حول إطار العمل المفضل لدينا Laravel. بدأت في عام 2023 كمدونة شخصية صغيرة ، وسوف تنمو لتصبح مركزًا للمعلومات المفيدة لجميع المستويات ان شاء الله.","title":"من نحن"}]